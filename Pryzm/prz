#!/bin/bash

# Logo

echo -e "\033[0;34m"
echo "███╗   ██╗ ██████╗ ██████╗ ███████╗   ██╗   ██╗ █████╗ ██╗     ██╗ ██████╗  █████╗ ████████╗ ██████╗ ██████╗ "
echo "████╗  ██║██╔═══██╗██╔══██╗██╔════╝   ██║   ██║██╔══██╗██║     ██║ ██╔══██╗██╔══██╗╚══██╔══╝██╔═══██╗██╔══██╗"
echo "██╔██╗ ██║██║   ██║██║  ██║█████╗     ██║   ██║███████║██║     ██║ ██║  ██║███████║   ██║   ██║   ██║██████╔╝"
echo "██║╚██╗██║██║   ██║██║  ██║██╔══╝     ██║   ██║██╔══██║██║     ██║ ██║  ██║██╔══██║   ██║   ██║   ██║██╔══██╗"
echo "██║ ╚████║╚██████╔╝██████╔╝███████╗   ╚██████╔╝██║  ██║███████║██║ ██████╔╝██║  ██║   ██║   ╚██████╔╝██║  ██║"
echo "╚═╝  ╚═══╝ ╚═════╝ ╚═════╝ ╚══════╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝"
echo "Gitbook: https://docs.validatorvn.com"
echo "Chanel: https://t.me/ValidatorVN"
echo "Github: https://github.com/NodeValidatorVN"
echo -e "\e[0m"

read -r -p "Enter node moniker: " NODE_MONIKER

CHAIN_ID="indigo-1"
CHAIN_DENOM="pryzm"
BINARY_NAME="pryzmd"
GITHUB="https://github.com/NodeValidatorVN"
BINARY_VERSION_TAG="v0.11.1"

echo -e "Node moniker: ${CYAN}$NODE_MONIKER${NC}"
echo -e "Chain id:     ${CYAN}$CHAIN_ID${NC}"
echo -e "Chain demon:  ${CYAN}$CHAIN_DENOM${NC}"
echo -e "Binary version tag:  ${CYAN}$BINARY_VERSION_TAG${NC}"

sleep 1

echo -e "\e[1m\e[32m1. Updating packages and dependencies--> \e[0m" && sleep 1
#UPDATE APT
sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev libleveldb-dev jq build-essential bsdmainutils git make ncdu htop lz4 screen unzip bc fail2ban htop -y

echo -e "\e[1m\e[32m2. Installing GO--> \e[0m" && sleep 1
#INSTALL GO
cd $HOME
VER="1.20.5"
wget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"
rm "go$VER.linux-amd64.tar.gz"
[ ! -f ~/.bash_profile ] && touch ~/.bash_profile
echo "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile
source $HOME/.bash_profile
[ ! -d ~/go/bin ] && mkdir -p ~/go/bin

echo -e "\e[1m\e[32m3. Downloading and building binaries--> \e[0m" && sleep 1

cd $HOME
wget https://storage.googleapis.com/pryzm-zone/core/0.11.1/pryzmd-0.11.1-linux-amd64.tar.gz
tar -xzvf $HOME/pryzmd-0.11.1-linux-amd64.tar.gz
mv pryzmd $HOME/go/bin

pryzmd config chain-id $CHAIN_ID
pryzmd init "$NODE_MONIKER" --chain-id $CHAIN_ID

wget -O $HOME/.pryzm/config/genesis.json "https://raw.githubusercontent.com/NodeValidatorVN/GuideNode/main/Pryzm/genesis.json"
wget -O $HOME/.pryzm/config/addrbook.json "https://raw.githubusercontent.com/NodeValidatorVN/GuideNode/main/Pryzm/addrbook.json"

SEEDS="fbfd48af73cd1f6de7f9102a0086ac63f46fb911@pryzm-testnet-seed.itrocket.net:41656"
PEERS="8acc64034c3805a09581c4359f0c1e8b28c73873@178.128.225.129:26656,c778da65696e032ff92375c9b3a296d54fa89126@195.201.245.178:56076,8978a749557b044feb7ea659af71f09a561470de@23.88.5.169:30656,470bf421c6887def16e65dfe05cf1344826be06b@95.214.53.187:32656,3cb6bf28cde7571fff7f5536f7441993789eff38@178.62.75.58:26656,2d8296b0e85fdb22e2a6bb7f85d91b5e96ba021e@37.27.58.171:26656,37210f7727961f7f50f92878183c8e105590f4c9@154.53.46.181:26656,7c743b507ec3b67bc790c826ec471d2635c992f7@88.99.3.158:24656,8b13facd07099883a2275db870834390109ded62@92.243.27.215:27656,835c7f8a5ba11a53244ca9346ea5324c3a4ba3ed@188.40.66.173:24656,713307ce72306d9e86b436fc69a03a0ab96b678f@pryzm-testnet-peer.itrocket.net:41656,8e79085bd9aa6ed609e625625952d001e3188f69@65.109.124.51:22656,c67ece9ff228ec12242406f1a7a99fd5de10b96d@144.76.176.154:19656,521644169526647a1109f14a26b43d98a41af011@84.247.138.107:41656,cdcd86ca01858275d0e78ee66b82109ee06df454@65.108.72.253:40656,d46155d57418e3d4834fde3af7c4ce5a69ccbdda@95.216.245.247:34656,9515a13bbdeb233eb59efd6e8db892ac46e5bac5@142.132.153.6:56656,7cdc65a90e252709b562556f7625830e9599f33c@65.21.203.242:14656,829661ad5ee7ddf6a495f7bef7b253d8917377d5@160.20.109.187:41656"
sed -i -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/.pryzm/config/config.toml

sed -i -e "s/^pruning *=.*/pruning = \"custom\"/" $HOME/.pryzm/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"100\"/" $HOME/.pryzm/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"50\"/" $HOME/.pryzm/config/app.toml

sed -i 's|minimum-gas-prices =.*|minimum-gas-prices = "0.015upryzm"|g' $HOME/.pryzm/config/app.toml
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/.pryzm/config/config.toml
sed -i -e "s/^indexer *=.*/indexer = \"null\"/" $HOME/.pryzm/config/config.toml

echo -e "\e[1m\e[32m4. Starting service and synchronization...--> \e[0m" && sleep 1

sudo tee /etc/systemd/system/pryzmd.service > /dev/null <<EOF
[Unit]
Description=Pryzm node
After=network-online.target
[Service]
User=$USER
WorkingDirectory=$HOME/.pryzm
ExecStart=$(which pryzmd) start
Restart=on-failure
RestartSec=5
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

pryzmd tendermint unsafe-reset-all --home $HOME/.pryzm
if curl -s --head curl https://testnet-files.itrocket.net/pryzm/snap_pryzm.tar.lz4 | head -n 1 | grep "200" > /dev/null; then
  curl https://testnet-files.itrocket.net/pryzm/snap_pryzm.tar.lz4 | lz4 -dc - | tar -xf - -C $HOME/.pryzm
    else
  echo no have snap
fi

sudo systemctl daemon-reload
sudo systemctl enable pryzmd
sudo systemctl restart pryzmd

echo '=============== SETUP FINISHED ==================='
echo -e "Check logs:            ${CYAN}sudo journalctl -u $BINARY_NAME -f --no-hostname -o cat ${NC}"
echo -e "Check synchronization: ${CYAN}$BINARY_NAME status 2>&1 | jq .SyncInfo.catching_up${NC}"
echo -e "More commands:         ${CYAN}$GITHUB${NC}"
source $HOME/.bash_profile
